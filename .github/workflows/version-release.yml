name: Version and Release

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Determine version bump
        id: version
        run: |
          # Get commit messages since last tag
          COMMITS=$(git log --oneline $(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD)
          
          # Determine version bump based on commit messages
          if echo "$COMMITS" | grep -q "BREAKING CHANGE\|!:"; then
            echo "bump=major" >> $GITHUB_OUTPUT
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$COMMITS" | grep -q "feat:"; then
            echo "bump=minor" >> $GITHUB_OUTPUT
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        run: |
          npm version ${{ steps.version.outputs.bump }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## ðŸš€ Release v${{ env.NEW_VERSION }}
            
            ### ðŸ“‹ Resumo
            - **Tipo**: ${{ steps.version.outputs.type }} release
            - **VersÃ£o**: ${{ env.NEW_VERSION }}
            - **Branch**: main
            
            ### ðŸ”„ MudanÃ§as
            - Features e correÃ§Ãµes incluÃ­das nesta release
            - Deploy automÃ¡tico para produÃ§Ã£o
            
            ### âœ… Checklist
            - [x] Testes passando
            - [x] ValidaÃ§Ãµes aprovadas
            - [x] Deploy realizado
            
            ---
            *Release criado automaticamente pelo GitHub Actions*
          draft: false
          prerelease: false

      - name: Push version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
          git push origin main 